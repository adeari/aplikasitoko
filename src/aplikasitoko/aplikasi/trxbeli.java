/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TRX BELI.java
 *
 * Created on Mar 10, 2012, 5:52:46 AM
 */
package aplikasitoko.aplikasi;

import aplikasitoko.Animation;
import aplikasitoko.Frame;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;
import org.apache.commons.lang.StringEscapeUtils;
import java.awt.Color;

import java.awt.Component;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.LookAndFeel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;


import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author amy
 */
public class trxbeli extends Frame {

    /** Creates new form trx beli */
    public trxbeli() {
        glasspanel1 = new glasspanel();
        glasspanel2 = new glasspanel();
        glasspanel3 = new glasspanel();
        glasspanel4 = new glasspanel();
        try {
            maskingdate = new MaskFormatter("##/##/####");
            maskingdate.setPlaceholderCharacter('_');
        } catch (Exception ex) {
        }
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        lihat();
        setLocationRelativeTo(null);
        setAnimationHide(Animation.HIDE_TO_BOTTOM);
        glasspanel1.showPanelii(pnSimpan, 0, 0, pnSimpan.getWidth() + 650, pnSimpan.getHeight() + 390);
        glasspanel2.showPanelii(panelalpa2, 15, 20, panelalpa2.getWidth(), panelalpa2.getHeight());
        glasspanel3.showPanelii(pnSimpanBarang, 30, 50, pnSimpanBarang.getWidth() + 800, pnSimpanBarang.getHeight() + 450);
        glasspanel4.showPanelii(panelalpa3, 15, 20, panelalpa3.getWidth() + 250, panelalpa3.getHeight());

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooserDialog1 = new datechooser.beans.DateChooserDialog();
        panelimagetbbarang1 = new aplikasitoko.panelimagetbbarang("/aplikasitoko/gambar/beli.jpg");
        btkeluar1 = new aplikasitoko.btkeluar();
        buttonStyle1 = new aplikasitoko.buttonStyle();
        panelalpa1 = new aplikasitoko.panelalpa();
        btlanjut = new aplikasitoko.buttonStyle();
        btakhir = new aplikasitoko.buttonStyle();
        btbalik = new aplikasitoko.buttonStyle();
        btawal = new aplikasitoko.buttonStyle();
        jScrollPane1 = new javax.swing.JScrollPane();
        final String kolom[]={"Nota Pembelian","Tanggal","Kode Suplier","Nama Suplier"};
        tmtabel=new javax.swing.table.AbstractTableModel() {
            public int getColumnCount() {  return kolom.length;   }
            public int getRowCount() {  return dataini.size();}
            public Object getValueAt(int baris1, int kolom1) {
                java.util.Vector barisan = (java.util.Vector)dataini.elementAt(baris1);
                return barisan.elementAt(kolom1);
            }
            public String getColumnName(int kolom1)
            {return kolom[kolom1];				    		}
            public boolean isCellEditable(int baris1, int kolom1){
                return false;
            }
            public void setValueAt(Object obj, int baris1, int kolom1){
                java.util.Vector barisdata = (java.util.Vector)dataini.elementAt(baris1);
                barisdata.setElementAt(obj, kolom1);
            }
            public Class getColumnClass(int c) {
                return getValueAt(0, c).getClass();
            }
        };
        tabel = new javax.swing.JTable(tmtabel);
        tabel.setAutoResizeMode(tabel.AUTO_RESIZE_OFF);
        tc=tabel.getColumn("Nota Pembelian");
        tc.setMinWidth(230);
        MultiLineHeaderRenderer mlhr = new MultiLineHeaderRenderer();
        mlhr.setBackground(new Color(255,204,153));
        headerrender = new headertabel(mlhr);
        tc.setHeaderRenderer(headerrender);
        tc=tabel.getColumn("Tanggal");
        tc.setMinWidth(165);tc.setHeaderRenderer(headerrender);
        tc=tabel.getColumn("Kode Suplier");
        tc.setMinWidth(200);tc.setHeaderRenderer(headerrender);
        tc=tabel.getColumn("Nama Suplier");
        tc.setMinWidth(500);tc.setHeaderRenderer(headerrender);
        tabel.setDefaultRenderer(Object.class, new rendertaabel_trxbeli_awal());
        tabel.getTableHeader().addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent event) {
                JTableHeader header = (JTableHeader) (event.getSource());
                int index = header.columnAtPoint(event.getPoint());
                Class dataType = tabel.getModel().getColumnClass(index);
                Class[] interfaces = dataType.getInterfaces();
                for (int i = 0; i < interfaces.length; i++) {
                    if (interfaces[i].equals(java.lang.Comparable.class)) {
                        ascendi=headerrender.columnSelected(index);
                        kolompilih=index;
                        lihat();
                        break;
                    }
                }
            }
        });

        limitnih = new javax.swing.JComboBox();
        lbhal = new aplikasitoko.textFieldStyle();
        lbakhirhalaman = new aplikasitoko.aplikasi.labelklip();
        lbakhirhalaman.setFont(lbakhirhalaman.getFont().deriveFont(50F));
        labelklip2 = new aplikasitoko.aplikasi.labelklip();
        labelklip3 = new aplikasitoko.aplikasi.labelklip();
        txCari = new aplikasitoko.textFieldStyle();
        pnSimpan = new aplikasitoko.aplikasi.panelalpatebel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        notaid = new aplikasitoko.textFieldStyle();
        btBatal = new aplikasitoko.buttonStyle();
        btSimpan = new aplikasitoko.buttonStyle();
        lbsimpantext = new aplikasitoko.aplikasi.labelklip();
        lbakhirhalaman.setFont(lbakhirhalaman.getFont().deriveFont(50F));
        jScrollPane2 = new javax.swing.JScrollPane();
        alamat = new aplikasitoko.textArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tlp = new aplikasitoko.textFieldStyle();
        pilihNota = new aplikasitoko.buttonStyle();
        pilihTgl = new aplikasitoko.buttonStyle();
        tgl = new aplikasitoko.textMasking();
        namasuplier = new aplikasitoko.textFieldStyle();
        jLabel6 = new javax.swing.JLabel();
        pilihsuplier = new aplikasitoko.buttonStyle();
        jScrollPane4 = new javax.swing.JScrollPane();
        final String kolomtrx[]={"No.","Kode Barang","Nama Barang","Banyaknya","Harga Beli","Total Harga Beli"};
        tmtransaksi =new javax.swing.table.AbstractTableModel() {
            public int getColumnCount() {  return kolomtrx.length;   }
            public int getRowCount() {  return dttransaksi.size();}
            public Object getValueAt(int baris1, int kolom1) {
                java.util.Vector barisan = (java.util.Vector)dttransaksi.elementAt(baris1);
                return barisan.elementAt(kolom1);
            }
            public String getColumnName(int kolom1)
            {return kolomtrx[kolom1];				    		}
            public boolean isCellEditable(int baris1, int kolom1){
                return false;
            }
            public void setValueAt(Object obj, int baris1, int kolom1){
                java.util.Vector barisdata = (java.util.Vector)dttransaksi.elementAt(baris1);
                barisdata.setElementAt(obj, kolom1);
            }
            public Class getColumnClass(int c) {
                return getValueAt(0, c).getClass();
            }
        };
        tbtransaksi = new javax.swing.JTable(tmtransaksi);
        tbtransaksi.setAutoResizeMode(tabel.AUTO_RESIZE_OFF);
        tc=tbtransaksi.getColumn("No.");
        tc.setMinWidth(50);
        MultiLineHeaderRenderer mlhrtx = new MultiLineHeaderRenderer();
        mlhrtx.setBackground(new Color(255,204,153));
        headertrx = new headertabel(mlhrtx);
        tc.setHeaderRenderer(headertrx);
        tc=tbtransaksi.getColumn("Kode Barang");
        tc.setMinWidth(210);tc.setHeaderRenderer(headertrx);
        tc=tbtransaksi.getColumn("Nama Barang");
        tc.setMinWidth(300);tc.setHeaderRenderer(headertrx);
        tc=tbtransaksi.getColumn("Banyaknya");
        tc.setMinWidth(185);tc.setHeaderRenderer(headertrx);
        tc=tbtransaksi.getColumn("Harga Beli");
        tc.setMinWidth(220);tc.setHeaderRenderer(headertrx);
        tc=tbtransaksi.getColumn("Total Harga Beli");
        tc.setMinWidth(220);tc.setHeaderRenderer(headertrx);
        tbtransaksi.setDefaultRenderer(Object.class, new rendertaabel());
        tbtransaksi.getTableHeader().addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent event) {
                JTableHeader header = (JTableHeader) (event.getSource());
                int index = header.columnAtPoint(event.getPoint());
                Class dataType = tbtransaksi.getModel().getColumnClass(index);
                Class[] interfaces = dataType.getInterfaces();
                for (int i = 0; i < interfaces.length; i++) {
                    if (interfaces[i].equals(java.lang.Comparable.class)) {
                        ascenditx=headertrx.columnSelected(index);
                        kolompilihtx=index;
                        lihattrx();
                        break;
                    }
                }
            }
        });

        buttonStyle2 = new aplikasitoko.buttonStyle();
        btCetak = new aplikasitoko.buttonStyle();
        jLabel11 = new javax.swing.JLabel();
        lbTotal = new aplikasitoko.textFieldStyle();
        panelalpa2 = new aplikasitoko.panelalpa();
        btlanjut1 = new aplikasitoko.buttonStyle();
        btakhir1 = new aplikasitoko.buttonStyle();
        btbalik1 = new aplikasitoko.buttonStyle();
        btawal1 = new aplikasitoko.buttonStyle();
        jScrollPane3 = new javax.swing.JScrollPane();
        final String kolom1[]={"Kode Suplier","Nama Suplier","Alamat","Telepon"};
        tmtabel1=new javax.swing.table.AbstractTableModel() {
            public int getColumnCount() {  return kolom1.length;   }
            public int getRowCount() {  return dataini1.size();}
            public Object getValueAt(int baris11, int kolom11) {
                java.util.Vector barisan = (java.util.Vector)dataini1.elementAt(baris11);
                return barisan.elementAt(kolom11);
            }
            public String getColumnName(int kolom11)
            {return kolom1[kolom11];				    		}
            public boolean isCellEditable(int baris11, int kolom11){
                return false;
            }
            public void setValueAt(Object obj, int baris11, int kolom11){
                java.util.Vector barisdata = (java.util.Vector)dataini.elementAt(baris11);
                barisdata.setElementAt(obj, kolom11);
            }
            public Class getColumnClass(int c) {
                return getValueAt(0, c).getClass();
            }
        };
        tabel1 = new javax.swing.JTable(tmtabel1);
        tabel1.setAutoResizeMode(tabel.AUTO_RESIZE_OFF);
        tc=tabel1.getColumn("Kode Suplier");
        tc.setMinWidth(230);
        MultiLineHeaderRenderer mlhr1 = new MultiLineHeaderRenderer();
        mlhr1.setBackground(new Color(255,204,153));
        headerrender1 = new headertabel(mlhr1);
        tc.setHeaderRenderer(headerrender1);
        tc=tabel1.getColumn("Nama Suplier");
        tc.setMinWidth(380);tc.setHeaderRenderer(headerrender1);
        tc=tabel1.getColumn("Alamat");
        tc.setMinWidth(330);tc.setHeaderRenderer(headerrender1);
        tc=tabel1.getColumn("Telepon");
        tc.setMinWidth(200);tc.setHeaderRenderer(headerrender1);
        tabel1.setDefaultRenderer(Object.class, new rendertaabel());
        tabel1.getTableHeader().addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent event) {
                JTableHeader header = (JTableHeader) (event.getSource());
                int index = header.columnAtPoint(event.getPoint());
                Class dataType = tabel1.getModel().getColumnClass(index);
                Class[] interfaces = dataType.getInterfaces();
                for (int i = 0; i < interfaces.length; i++) {
                    if (interfaces[i].equals(java.lang.Comparable.class)) {
                        ascendi1=headerrender1.columnSelected(index);
                        kolompilih1=index;
                        lihat();
                        break;
                    }
                }
            }
        });

        limitnih1 = new javax.swing.JComboBox();
        lbhal1 = new aplikasitoko.textFieldStyle();
        lbakhirhalaman1 = new aplikasitoko.aplikasi.labelklip();
        lbakhirhalaman1.setFont(lbakhirhalaman1.getFont().deriveFont(50F));
        labelklip4 = new aplikasitoko.aplikasi.labelklip();
        labelklip5 = new aplikasitoko.aplikasi.labelklip();
        txCari1 = new aplikasitoko.textFieldStyle();
        pnSimpanBarang = new aplikasitoko.aplikasi.panelalpatebel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        kd_barang = new aplikasitoko.textFieldStyle();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        nama_brg = new aplikasitoko.textFieldStyle();
        jml_beli_brg = new aplikasitoko.numberfield();
        hrg_beli_brg = new aplikasitoko.numberfield();
        btSimpan1 = new aplikasitoko.buttonStyle();
        btBatal1 = new aplikasitoko.buttonStyle();
        lbsimpantext1 = new aplikasitoko.aplikasi.labelklip();
        lbakhirhalaman.setFont(lbakhirhalaman.getFont().deriveFont(50F));
        pilihsuplier1 = new aplikasitoko.buttonStyle();
        jLabel12 = new javax.swing.JLabel();
        totalbeli = new aplikasitoko.numberfield();
        panelalpa3 = new aplikasitoko.panelalpa();
        btlanjut2 = new aplikasitoko.buttonStyle();
        btakhir2 = new aplikasitoko.buttonStyle();
        btbalik2 = new aplikasitoko.buttonStyle();
        btawal2 = new aplikasitoko.buttonStyle();
        jScrollPane5 = new javax.swing.JScrollPane();
        final String kolom2[]={"Kode Barang","Nama Barang","Harga Beli","Harga Jual\nGrosir","Harga Jual\nRetail","Stok"};
        tmtabel2=new javax.swing.table.AbstractTableModel() {
            public int getColumnCount() {  return kolom2.length;   }
            public int getRowCount() {  return dataini2.size();}
            public Object getValueAt(int baris1, int kolom1) {
                java.util.Vector barisan = (java.util.Vector)dataini2.elementAt(baris1);
                return barisan.elementAt(kolom1);
            }
            public String getColumnName(int kolom1)
            {return kolom2[kolom1];				    		}
            public boolean isCellEditable(int baris1, int kolom1){
                return false;
            }
            public void setValueAt(Object obj, int baris1, int kolom1){
                java.util.Vector barisdata = (java.util.Vector)dataini2.elementAt(baris1);
                barisdata.setElementAt(obj, kolom1);
            }
            public Class getColumnClass(int c) {
                return getValueAt(0, c).getClass();
            }
        };
        tabel2 = new javax.swing.JTable(tmtabel2);
        tabel2.setAutoResizeMode(tabel.AUTO_RESIZE_OFF);
        tc=tabel2.getColumn("Kode Barang");
        tc.setMinWidth(190);
        mlhr = new MultiLineHeaderRenderer();
        mlhr.setBackground(new Color(255,204,153));
        headerrender2 = new headertabel(mlhr);
        tc.setHeaderRenderer(headerrender2);
        tc=tabel2.getColumn("Nama Barang");
        tc.setMinWidth(220);tc.setHeaderRenderer(headerrender2);
        tc=tabel2.getColumn("Harga Beli");
        tc.setMinWidth(170);tc.setHeaderRenderer(headerrender2);
        tc=tabel2.getColumn("Harga Jual\nGrosir");
        tc.setMinWidth(180);tc.setHeaderRenderer(headerrender2);
        tc=tabel2.getColumn("Harga Jual\nRetail");
        tc.setMinWidth(180);tc.setHeaderRenderer(headerrender2);
        tc=tabel2.getColumn("Stok");
        tc.setMinWidth(220);tc.setHeaderRenderer(headerrender2);
        tabel2.setDefaultRenderer(Object.class, new rendertaabel());

        tabel2.getTableHeader().addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent event) {
                JTableHeader header = (JTableHeader) (event.getSource());
                int index = header.columnAtPoint(event.getPoint());
                Class dataType = tabel2.getModel().getColumnClass(index);
                Class[] interfaces = dataType.getInterfaces();
                for (int i = 0; i < interfaces.length; i++) {
                    if (interfaces[i].equals(java.lang.Comparable.class)) {
                        ascendi2=headerrender2.columnSelected(index);
                        kolompilih2=index;
                        lihat2();
                        break;
                    }
                }
            }
        });

        limitnih2 = new javax.swing.JComboBox();
        lbhal2 = new aplikasitoko.textFieldStyle();
        lbakhirhalaman2 = new aplikasitoko.aplikasi.labelklip();
        lbakhirhalaman.setFont(lbakhirhalaman.getFont().deriveFont(50F));
        labelklip6 = new aplikasitoko.aplikasi.labelklip();
        labelklip7 = new aplikasitoko.aplikasi.labelklip();
        txCari2 = new aplikasitoko.textFieldStyle();

        dateChooserDialog1.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    dateChooserDialog1.setCalendarPreferredSize(new java.awt.Dimension(700, 500));
    dateChooserDialog1.setWeekStyle(datechooser.view.WeekDaysStyle.FULL);
    dateChooserDialog1.setLocale(new java.util.Locale("in", "ID", ""));
    dateChooserDialog1.setNavigateFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 25));
    dateChooserDialog1.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
        public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
            dateChooserDialog1OnSelectionChange(evt);
        }
    });

    setTitle("TRANSAKSI PEMBELIAN");
    addWindowListener(new java.awt.event.WindowAdapter() {
        public void windowClosing(java.awt.event.WindowEvent evt) {
            formWindowClosing(evt);
        }
    });

    panelimagetbbarang1.setLayout(null);

    btkeluar1.setForeground(new java.awt.Color(0, 0, 204));
    btkeluar1.setText("Tutup");
    btkeluar1.setFont(new java.awt.Font("Arial Black", 1, 20));
    btkeluar1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btkeluar1ActionPerformed(evt);
        }
    });
    panelimagetbbarang1.add(btkeluar1);
    btkeluar1.setBounds(30, 600, 230, 57);

    buttonStyle1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/tambah.gif"))); // NOI18N
    buttonStyle1.setMnemonic('T');
    buttonStyle1.setText("Tambah");
    buttonStyle1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            buttonStyle1ActionPerformed(evt);
        }
    });
    panelimagetbbarang1.add(buttonStyle1);
    buttonStyle1.setBounds(520, 600, 210, 60);

    panelalpa1.setBackground(new java.awt.Color(255, 153, 102));
    panelalpa1.setLayout(null);

    btlanjut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/btlanjut.png"))); // NOI18N
    btlanjut.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btlanjutActionPerformed(evt);
        }
    });
    panelalpa1.add(btlanjut);
    btlanjut.setBounds(610, 520, 64, 56);

    btakhir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/btakhir.png"))); // NOI18N
    btakhir.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btakhirActionPerformed(evt);
        }
    });
    panelalpa1.add(btakhir);
    btakhir.setBounds(690, 520, 64, 56);

    btbalik.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/btbalik.png"))); // NOI18N
    btbalik.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btbalikActionPerformed(evt);
        }
    });
    panelalpa1.add(btbalik);
    btbalik.setBounds(170, 520, 64, 56);

    btawal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/btawal.png"))); // NOI18N
    btawal.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btawalActionPerformed(evt);
        }
    });
    panelalpa1.add(btawal);
    btawal.setBounds(100, 520, 60, 56);

    tabel.setToolTipText("TRANSAKSI PEMBELIAN");
    tabel.setRowHeight(30);
    tabel.setSurrendersFocusOnKeystroke(true);
    tabel.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tabelMouseClicked(evt);
        }
    });
    tabel.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            tabelKeyReleased(evt);
        }
    });
    jScrollPane1.setViewportView(tabel);

    panelalpa1.add(jScrollPane1);
    jScrollPane1.setBounds(20, 130, 1160, 380);

    limitnih.setFont(new java.awt.Font("Arial", 1, 25)); // NOI18N
    limitnih.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10", "20", "30", "50", "100" }));
    limitnih.setSelectedIndex(3);
    limitnih.setRenderer(new aplikasitoko.pagingCombo());
    limitnih.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            limitnihActionPerformed(evt);
        }
    });
    panelalpa1.add(limitnih);
    limitnih.setBounds(20, 520, 70, 50);

    lbhal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    lbhal.setText("1");
    lbhal.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            lbhalKeyReleased(evt);
        }
    });
    panelalpa1.add(lbhal);
    lbhal.setBounds(240, 520, 90, 56);

    lbakhirhalaman.setText("halaman");
    lbakhirhalaman.setFont(new java.awt.Font("Arial", 1, 25));
    panelalpa1.add(lbakhirhalaman);
    lbakhirhalaman.setBounds(340, 530, 260, 50);

    labelklip2.setText("TRANSAKSI PEMBELIAN");
    labelklip2.setFont(new java.awt.Font("Arial", 1, 36));
    panelalpa1.add(labelklip2);
    labelklip2.setBounds(400, 0, 460, 60);

    labelklip3.setBackground(new java.awt.Color(153, 204, 255));
    labelklip3.setText("Kata Pencarian");
    labelklip3.setFont(new java.awt.Font("Arial", 1, 36));
    panelalpa1.add(labelklip3);
    labelklip3.setBounds(60, 60, 270, 50);

    txCari.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            txCariKeyReleased(evt);
        }
    });
    panelalpa1.add(txCari);
    txCari.setBounds(360, 60, 760, 56);

    panelimagetbbarang1.add(panelalpa1);
    panelalpa1.setBounds(10, 0, 1210, 580);

    pnSimpan.setBackground(new java.awt.Color(153, 153, 0));
    pnSimpan.setAutoscrolls(true);
    pnSimpan.setLayout(null);

    jLabel2.setFont(new java.awt.Font("Arial", 1, 25));
    jLabel2.setForeground(new java.awt.Color(0, 51, 51));
    jLabel2.setText("Tanggal");
    pnSimpan.add(jLabel2);
    jLabel2.setBounds(40, 50, 200, 50);

    jLabel3.setFont(new java.awt.Font("Arial", 1, 25));
    jLabel3.setForeground(new java.awt.Color(0, 51, 51));
    jLabel3.setText("No. Nota");
    pnSimpan.add(jLabel3);
    jLabel3.setBounds(40, 100, 200, 50);

    notaid.setName("usr"); // NOI18N
    notaid.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            notaidKeyReleased(evt);
        }
    });
    pnSimpan.add(notaid);
    notaid.setBounds(240, 101, 260, 47);

    btBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/kancel.gif"))); // NOI18N
    btBatal.setMnemonic('L');
    btBatal.setText("Keluar");
    btBatal.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btBatalActionPerformed(evt);
        }
    });
    pnSimpan.add(btBatal);
    btBatal.setBounds(510, 634, 200, 58);

    btSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/simpan.gif"))); // NOI18N
    btSimpan.setMnemonic('m');
    btSimpan.setText("Simpan");
    btSimpan.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btSimpanActionPerformed(evt);
        }
    });
    pnSimpan.add(btSimpan);
    btSimpan.setBounds(50, 634, 220, 60);

    lbsimpantext.setText("TAMBAH TRANSAKSI BELI");
    lbsimpantext.setFont(new java.awt.Font("Arial", 1, 36));
    pnSimpan.add(lbsimpantext);
    lbsimpantext.setBounds(240, 0, 480, 50);

    alamat.setColumns(20);
    alamat.setEditable(false);
    alamat.setLineWrap(true);
    alamat.setWrapStyleWord(true);
    alamat.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            alamatKeyReleased(evt);
        }
    });
    jScrollPane2.setViewportView(alamat);

    pnSimpan.add(jScrollPane2);
    jScrollPane2.setBounds(240, 210, 560, 90);

    jLabel4.setFont(new java.awt.Font("Arial", 1, 25));
    jLabel4.setForeground(new java.awt.Color(0, 51, 51));
    jLabel4.setText("Alamat Suplier");
    pnSimpan.add(jLabel4);
    jLabel4.setBounds(40, 210, 200, 50);

    jLabel5.setFont(new java.awt.Font("Arial", 1, 25));
    jLabel5.setForeground(new java.awt.Color(0, 51, 51));
    jLabel5.setText("Telepon");
    pnSimpan.add(jLabel5);
    jLabel5.setBounds(40, 300, 200, 50);

    tlp.setEditable(false);
    tlp.setName("usr"); // NOI18N
    tlp.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            tlpKeyReleased(evt);
        }
    });
    pnSimpan.add(tlp);
    tlp.setBounds(240, 307, 510, 47);

    pilihNota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/searcing.png"))); // NOI18N
    pilihNota.setMnemonic('P');
    pilihNota.setText("Pilih No. Nota");
    pilihNota.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            pilihNotaActionPerformed(evt);
        }
    });
    pnSimpan.add(pilihNota);
    pilihNota.setBounds(510, 90, 260, 60);

    pilihTgl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/tgl.png"))); // NOI18N
    pilihTgl.setMnemonic('d');
    pilihTgl.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            pilihTglActionPerformed(evt);
        }
    });
    pnSimpan.add(pilihTgl);
    pilihTgl.setBounds(430, 49, 70, 50);
    pnSimpan.add(tgl);
    tgl.setBounds(240, 50, 180, 47);

    namasuplier.setEditable(false);
    namasuplier.setName("usr"); // NOI18N
    pnSimpan.add(namasuplier);
    namasuplier.setBounds(240, 157, 550, 47);

    jLabel6.setFont(new java.awt.Font("Arial", 1, 25));
    jLabel6.setForeground(new java.awt.Color(0, 51, 51));
    jLabel6.setText("Nama Suplier");
    pnSimpan.add(jLabel6);
    jLabel6.setBounds(40, 160, 200, 50);

    pilihsuplier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/cari2.png"))); // NOI18N
    pilihsuplier.setMnemonic('u');
    pilihsuplier.setText("Pilih Suplier");
    pilihsuplier.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            pilihsuplierActionPerformed(evt);
        }
    });
    pnSimpan.add(pilihsuplier);
    pilihsuplier.setBounds(800, 150, 260, 60);

    tbtransaksi.setFont(new java.awt.Font("Arial", 0, 25));
    tbtransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tbtransaksiMouseClicked(evt);
        }
    });
    tbtransaksi.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            tbtransaksiKeyReleased(evt);
        }
    });
    jScrollPane4.setViewportView(tbtransaksi);

    pnSimpan.add(jScrollPane4);
    jScrollPane4.setBounds(20, 380, 1230, 250);

    buttonStyle2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/tambah.gif"))); // NOI18N
    buttonStyle2.setMnemonic('B');
    buttonStyle2.setText("Tambah Barang");
    buttonStyle2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            buttonStyle2ActionPerformed(evt);
        }
    });
    pnSimpan.add(buttonStyle2);
    buttonStyle2.setBounds(960, 315, 290, 60);

    btCetak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/print.png"))); // NOI18N
    btCetak.setMnemonic('K');
    btCetak.setText("Cetak");
    btCetak.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btCetakActionPerformed(evt);
        }
    });
    pnSimpan.add(btCetak);
    btCetak.setBounds(290, 634, 200, 60);

    jLabel11.setFont(new java.awt.Font("Arial", 1, 25));
    jLabel11.setForeground(new java.awt.Color(0, 51, 51));
    jLabel11.setText("Total Harga Beli");
    pnSimpan.add(jLabel11);
    jLabel11.setBounds(720, 633, 210, 50);

    lbTotal.setEditable(false);
    lbTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    lbTotal.setName("usr"); // NOI18N
    pnSimpan.add(lbTotal);
    lbTotal.setBounds(940, 633, 300, 47);

    panelimagetbbarang1.add(pnSimpan);
    pnSimpan.setBounds(1220, 690, 680, 310);

    panelalpa2.setBackground(new java.awt.Color(255, 153, 102));
    panelalpa2.setLayout(null);

    btlanjut1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/btlanjut.png"))); // NOI18N
    btlanjut1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btlanjut1ActionPerformed(evt);
        }
    });
    panelalpa2.add(btlanjut1);
    btlanjut1.setBounds(610, 500, 64, 56);

    btakhir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/btakhir.png"))); // NOI18N
    btakhir1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btakhir1ActionPerformed(evt);
        }
    });
    panelalpa2.add(btakhir1);
    btakhir1.setBounds(690, 500, 64, 56);

    btbalik1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/btbalik.png"))); // NOI18N
    btbalik1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btbalik1ActionPerformed(evt);
        }
    });
    panelalpa2.add(btbalik1);
    btbalik1.setBounds(170, 500, 64, 56);

    btawal1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/btawal.png"))); // NOI18N
    btawal1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btawal1ActionPerformed(evt);
        }
    });
    panelalpa2.add(btawal1);
    btawal1.setBounds(100, 500, 60, 56);

    tabel1.setToolTipText("Data Suplier");
    tabel1.setRowHeight(30);
    tabel1.setSurrendersFocusOnKeystroke(true);
    tabel1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tabel1MouseClicked(evt);
        }
    });
    jScrollPane3.setViewportView(tabel1);

    panelalpa2.add(jScrollPane3);
    jScrollPane3.setBounds(20, 120, 1160, 380);

    limitnih1.setFont(new java.awt.Font("Arial", 1, 25)); // NOI18N
    limitnih1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10", "20", "30", "50", "100" }));
    limitnih1.setSelectedIndex(3);
    limitnih1.setRenderer(new aplikasitoko.pagingCombo());
    limitnih1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            limitnih1ActionPerformed(evt);
        }
    });
    panelalpa2.add(limitnih1);
    limitnih1.setBounds(20, 500, 70, 50);

    lbhal1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    lbhal1.setText("1");
    lbhal1.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            lbhal1KeyReleased(evt);
        }
    });
    panelalpa2.add(lbhal1);
    lbhal1.setBounds(240, 500, 90, 56);

    lbakhirhalaman1.setText("halaman");
    lbakhirhalaman1.setFont(new java.awt.Font("Arial", 1, 25));
    panelalpa2.add(lbakhirhalaman1);
    lbakhirhalaman1.setBounds(340, 510, 260, 50);

    labelklip4.setText("DATA SUPLIER");
    labelklip4.setFont(new java.awt.Font("Arial", 1, 36));
    panelalpa2.add(labelklip4);
    labelklip4.setBounds(450, 0, 270, 60);

    labelklip5.setBackground(new java.awt.Color(153, 204, 255));
    labelklip5.setText("Kata Pencarian");
    labelklip5.setFont(new java.awt.Font("Arial", 1, 36));
    panelalpa2.add(labelklip5);
    labelklip5.setBounds(30, 60, 270, 50);

    txCari1.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            txCari1KeyReleased(evt);
        }
    });
    panelalpa2.add(txCari1);
    txCari1.setBounds(320, 60, 760, 56);

    panelimagetbbarang1.add(panelalpa2);
    panelalpa2.setBounds(10, 700, 1210, 580);

    pnSimpanBarang.setBackground(new java.awt.Color(204, 153, 255));
    pnSimpanBarang.setLayout(null);

    jLabel7.setFont(new java.awt.Font("Arial", 1, 25));
    jLabel7.setForeground(new java.awt.Color(0, 51, 51));
    jLabel7.setText("Banyaknya");
    pnSimpanBarang.add(jLabel7);
    jLabel7.setBounds(20, 210, 210, 50);

    jLabel8.setFont(new java.awt.Font("Arial", 1, 25));
    jLabel8.setForeground(new java.awt.Color(0, 51, 51));
    jLabel8.setText("Kode Barang");
    pnSimpanBarang.add(jLabel8);
    jLabel8.setBounds(20, 50, 200, 50);

    kd_barang.setName("usr"); // NOI18N
    kd_barang.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            kd_barangFocusLost(evt);
        }
    });
    kd_barang.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            kd_barangKeyReleased(evt);
        }
    });
    pnSimpanBarang.add(kd_barang);
    kd_barang.setBounds(230, 50, 300, 47);

    jLabel9.setFont(new java.awt.Font("Arial", 1, 25));
    jLabel9.setForeground(new java.awt.Color(0, 51, 51));
    jLabel9.setText("Nama Barang");
    pnSimpanBarang.add(jLabel9);
    jLabel9.setBounds(20, 110, 200, 50);

    jLabel10.setFont(new java.awt.Font("Arial", 1, 25));
    jLabel10.setForeground(new java.awt.Color(0, 51, 51));
    jLabel10.setText("Harga Beli");
    pnSimpanBarang.add(jLabel10);
    jLabel10.setBounds(20, 160, 200, 50);

    nama_brg.setName("usr"); // NOI18N
    nama_brg.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            nama_brgKeyReleased(evt);
        }
    });
    pnSimpanBarang.add(nama_brg);
    nama_brg.setBounds(230, 110, 440, 47);

    jml_beli_brg.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jml_beli_brgKeyReleased(evt);
        }
    });
    pnSimpanBarang.add(jml_beli_brg);
    jml_beli_brg.setBounds(230, 210, 310, 47);

    hrg_beli_brg.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            hrg_beli_brgKeyReleased(evt);
        }
    });
    pnSimpanBarang.add(hrg_beli_brg);
    hrg_beli_brg.setBounds(230, 160, 310, 47);

    btSimpan1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/simpan.gif"))); // NOI18N
    btSimpan1.setMnemonic('i');
    btSimpan1.setText("Simpan");
    btSimpan1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btSimpan1ActionPerformed(evt);
        }
    });
    pnSimpanBarang.add(btSimpan1);
    btSimpan1.setBounds(130, 340, 230, 60);

    btBatal1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/kancel.gif"))); // NOI18N
    btBatal1.setMnemonic('a');
    btBatal1.setText("Batal");
    btBatal1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btBatal1ActionPerformed(evt);
        }
    });
    pnSimpanBarang.add(btBatal1);
    btBatal1.setBounds(420, 340, 220, 58);

    lbsimpantext1.setText("TAMBAH PEMBELIAN BARANG");
    lbsimpantext1.setFont(new java.awt.Font("Arial", 1, 36));
    pnSimpanBarang.add(lbsimpantext1);
    lbsimpantext1.setBounds(90, 0, 620, 50);

    pilihsuplier1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/cari2.png"))); // NOI18N
    pilihsuplier1.setMnemonic('S');
    pilihsuplier1.setText("Pilih Barang");
    pilihsuplier1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            pilihsuplier1ActionPerformed(evt);
        }
    });
    pnSimpanBarang.add(pilihsuplier1);
    pilihsuplier1.setBounds(540, 46, 260, 60);

    jLabel12.setFont(new java.awt.Font("Arial", 1, 25));
    jLabel12.setForeground(new java.awt.Color(0, 51, 51));
    jLabel12.setText("Total Harga Beli");
    pnSimpanBarang.add(jLabel12);
    jLabel12.setBounds(20, 260, 200, 50);
    pnSimpanBarang.add(totalbeli);
    totalbeli.setBounds(230, 260, 310, 47);

    panelimagetbbarang1.add(pnSimpanBarang);
    pnSimpanBarang.setBounds(850, 0, 0, 0);

    panelalpa3.setBackground(new java.awt.Color(255, 153, 102));
    panelalpa3.setLayout(null);

    btlanjut2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/btlanjut.png"))); // NOI18N
    btlanjut2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btlanjut2ActionPerformed(evt);
        }
    });
    panelalpa3.add(btlanjut2);
    btlanjut2.setBounds(610, 500, 64, 56);

    btakhir2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/btakhir.png"))); // NOI18N
    btakhir2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btakhir2ActionPerformed(evt);
        }
    });
    panelalpa3.add(btakhir2);
    btakhir2.setBounds(690, 500, 64, 56);

    btbalik2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/btbalik.png"))); // NOI18N
    btbalik2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btbalik2ActionPerformed(evt);
        }
    });
    panelalpa3.add(btbalik2);
    btbalik2.setBounds(170, 500, 64, 56);

    btawal2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasitoko/gambar/btawal.png"))); // NOI18N
    btawal2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btawal2ActionPerformed(evt);
        }
    });
    panelalpa3.add(btawal2);
    btawal2.setBounds(100, 500, 60, 56);

    tabel2.setToolTipText("Data Barang");
    tabel2.setRowHeight(30);
    tabel2.setSurrendersFocusOnKeystroke(true);
    tabel2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tabel2MouseClicked(evt);
        }
    });
    jScrollPane5.setViewportView(tabel2);

    panelalpa3.add(jScrollPane5);
    jScrollPane5.setBounds(20, 120, 1160, 380);

    limitnih2.setFont(new java.awt.Font("Arial", 1, 25)); // NOI18N
    limitnih2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10", "20", "30", "50", "100" }));
    limitnih2.setSelectedIndex(3);
    limitnih2.setRenderer(new aplikasitoko.pagingCombo());
    limitnih2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            limitnih2ActionPerformed(evt);
        }
    });
    panelalpa3.add(limitnih2);
    limitnih2.setBounds(20, 500, 70, 50);

    lbhal2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    lbhal2.setText("1");
    lbhal2.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            lbhal2KeyReleased(evt);
        }
    });
    panelalpa3.add(lbhal2);
    lbhal2.setBounds(240, 500, 90, 56);

    lbakhirhalaman2.setText("halaman");
    lbakhirhalaman2.setFont(new java.awt.Font("Arial", 1, 25));
    panelalpa3.add(lbakhirhalaman2);
    lbakhirhalaman2.setBounds(340, 510, 260, 50);

    labelklip6.setText("DATA BARANG");
    labelklip6.setFont(new java.awt.Font("Arial", 1, 36));
    panelalpa3.add(labelklip6);
    labelklip6.setBounds(450, 0, 270, 60);

    labelklip7.setBackground(new java.awt.Color(153, 204, 255));
    labelklip7.setText("Kata Pencarian");
    labelklip7.setFont(new java.awt.Font("Arial", 1, 36));
    panelalpa3.add(labelklip7);
    labelklip7.setBounds(30, 60, 270, 50);

    txCari2.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            txCari2KeyReleased(evt);
        }
    });
    panelalpa3.add(txCari2);
    txCari2.setBounds(320, 60, 760, 56);

    panelimagetbbarang1.add(panelalpa3);
    panelalpa3.setBounds(10, 10, 1210, 580);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(panelimagetbbarang1, javax.swing.GroupLayout.DEFAULT_SIZE, 1249, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(panelimagetbbarang1, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
    );

    java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
    setBounds((screenSize.width-1265)/2, (screenSize.height-710)/2, 1265, 710);
    }// </editor-fold>//GEN-END:initComponents

private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    btBatalActionPerformed(null);
    this.setVisible(false);
}//GEN-LAST:event_formWindowClosing

private void btlanjutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlanjutActionPerformed
    lbhal.setText(String.valueOf(Integer.valueOf(lbhal.getText()) + 1));
    lihat();
}//GEN-LAST:event_btlanjutActionPerformed

private void btbalikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbalikActionPerformed
    lbhal.setText(String.valueOf(Integer.valueOf(lbhal.getText()) - 1));
    lihat();
}//GEN-LAST:event_btbalikActionPerformed

private void btawalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btawalActionPerformed
    lbhal.setText("1");
    lihat();
}//GEN-LAST:event_btawalActionPerformed

private void limitnihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limitnihActionPerformed
    lbhal.setText("1");
    lihat();
}//GEN-LAST:event_limitnihActionPerformed

private void btakhirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btakhirActionPerformed
    lbhal.setText(String.valueOf(akhir));
    lihat();
}//GEN-LAST:event_btakhirActionPerformed

private void lbhalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lbhalKeyReleased
    if (evt.getKeyCode() == evt.VK_ENTER) {
        lihat();
    } else {
        if (lbhal.getText().length() > 0) {
            try {
                Integer.valueOf(lbhal.getText());
            } catch (Exception ex) {
                lbhal.setText("1");
            }
        }
    }
}//GEN-LAST:event_lbhalKeyReleased

private void txCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txCariKeyReleased
    if (evt.getKeyCode() == evt.VK_ENTER) {
        lihat();
    }
}//GEN-LAST:event_txCariKeyReleased

private void btkeluar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btkeluar1ActionPerformed
    setVisible(false);
}//GEN-LAST:event_btkeluar1ActionPerformed

private void buttonStyle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStyle1ActionPerformed
    setGlassPane(glasspanel1);
    panelalpa1.setVisible(false);
    glasspanel1.setVisible(true);
    lbsimpantext.setText("TAMBAH TRANSAKSI BELI");
    btSimpan.setText("TAMBAH");
    btSimpan.setMnemonic('T');
    buttonStyle2.setEnabled(true);
    notaid.setText("");
    alamat.setText("");
    tlp.setText("");
    Date dt = new Date();
    tgl.setText(sdf.format(dt));
    kd_org = "";
    namasuplier.setText("");
    notaid.setEditable(true);
    pilihNota.setEnabled(true);
    lbTotal.setText("0 ");
    btCetak.setEnabled(false);
    try {
        Class.forName(fsu.klas).newInstance();
        Connection con = DriverManager.getConnection(fsu.klaSS);
        Statement sta = con.createStatement();
        sta.executeUpdate("delete from tb_trxbeli2 where kd_user=" + pemakai);
        dttransaksi = new java.util.Vector();
        tbtransaksi.tableChanged(new javax.swing.event.TableModelEvent(tmtransaksi));
        sta.close();
        con.close();
    } catch (Exception ex) {
        if (fsu.idebugging) {
            System.out.println(" Salah nya " + ex.getMessage());
        }
    }
}//GEN-LAST:event_buttonStyle1ActionPerformed

private void btBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBatalActionPerformed
    panelalpa1.setVisible(true);
    notaid.setText("");
    alamat.setText("");
    tlp.setText("");
    glasspanel1.setVisible(false);
    try {
        Class.forName(fsu.klas).newInstance();
        Connection con = DriverManager.getConnection(fsu.klaSS);
        Statement sta = con.createStatement();
        sta.executeUpdate("delete from tb_trxbeli2 where kd_user=" + pemakai);
        dttransaksi = new java.util.Vector();
        tbtransaksi.tableChanged(new javax.swing.event.TableModelEvent(tmtransaksi));
        sta.close();
        con.close();
    } catch (Exception ex) {
        if (fsu.idebugging) {
            System.out.println(" Salah nya " + ex.getMessage());
        }
    }
}//GEN-LAST:event_btBatalActionPerformed

private void btSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSimpanActionPerformed
    String qry = "";
    if (notaid.getText().length() < 1) {
        javax.swing.JOptionPane.showMessageDialog(null, "Pilih Nota dulu", "Pesan", 1);
    } else if (kd_org.length() < 1) {
        javax.swing.JOptionPane.showMessageDialog(null, "Pilih Suplier dulu", "Pesan", 1);
    } else {
        if (lbsimpantext.getText().equalsIgnoreCase("TAMBAH TRANSAKSI BELI")) {
            qry = "select nota from tb_trxbeli where nota=" + fsu.fixSqlCharacter(notaid.getText());
            try {
                Class.forName(fsu.klas).newInstance();
                Connection con = DriverManager.getConnection(fsu.klaSS);
                Statement sta = con.createStatement();
                Statement stin = con.createStatement();
                ResultSet rs = sta.executeQuery(qry);
                if (rs.next()) {
                    javax.swing.JOptionPane.showMessageDialog(null, "No. Nota ini telah terpakai", "Pesan", 1);
                } else {
                    qry = "insert into tb_trxbeli (nota,kd_sup,tanggal) values ("
                            + fsu.fixSqlCharacter(notaid.getText()) + ","
                            + fsu.fixSqlCharacter(kd_org) + ",STR_TO_DATE("
                            + fsu.fixSqlCharacter(tgl.getText()) + ", '%d/%m/%Y'));";
                    if (fsu.idebugging) {
                        System.out.println(" simpansuplier " + qry);
                    }
                    stin.executeUpdate(qry);
                    int i = 0, ratahrg_beli = 0, stokbaru = 0, hrgBaru = 0;
                    for (i = 0; i < tbtransaksi.getRowCount(); i++) {
                        qry = "select hrg_beli from tb_trxbeli2 where kd_brg=" + fsu.fixSqlCharacter(tbtransaksi.getValueAt(i, 1).toString());
                        rs = sta.executeQuery(qry);
                        if (rs.next()) {
                            hrgBaru = rs.getInt("hrg_beli");
                        }
                        qry = "select hrg_beli,stok,hrg_jual_grosir,hrg_jual_retail from tb_barang where kd_brg=" + fsu.fixSqlCharacter(tbtransaksi.getValueAt(i, 1).toString());
                        rs = sta.executeQuery(qry);
                        if (rs.next()) {
                            qry = "insert into tb_trxbeli1 (nota,kd_brg,hrg_beli,hrg_jual_grosir,hrg_jual_retail,stok,kd_hrgbeli,totalbeli) "
                                    + " values (" + fsu.fixSqlCharacter(notaid.getText()) + ","
                                    + fsu.fixSqlCharacter(tbtransaksi.getValueAt(i, 1).toString()) + ","
                                    + fsu.fixSqlNumber(String.valueOf(hrgBaru)) + ","
                                    + fsu.fixSqlNumber(rs.getString("hrg_jual_grosir")) + ","
                                    + fsu.fixSqlNumber(rs.getString("hrg_jual_retail")) + ","
                                    + fsu.fixSqlNumber(tbtransaksi.getValueAt(i, 3).toString()) + ","
                                    + fsu.fixSqlCharacter(fsu.pengkodean(fsu.fixSqlNumber(String.valueOf(hrgBaru)))) + ","
                                    + fsu.fixSqlNumber(tbtransaksi.getValueAt(i, 5).toString()) + ");";

                            if (fsu.idebugging) {
                                System.out.println(" Tambah transaksi beli " + qry);
                            }
                            stin.executeUpdate(qry);
                            stokbaru = (rs.getInt("stok") + Integer.valueOf(fsu.fixSqlNumber(tbtransaksi.getValueAt(i, 3).toString())));
                            ratahrg_beli = ((rs.getInt("hrg_beli") * rs.getInt("stok"))
                                    + (hrgBaru
                                    * Integer.valueOf(fsu.fixSqlNumber(tbtransaksi.getValueAt(i, 3).toString())))) / stokbaru;

                            qry = "update tb_barang set hrg_beli=" + fsu.fixSqlNumber(String.valueOf(ratahrg_beli))
                                    + ",stok=" + fsu.fixSqlNumber(String.valueOf(stokbaru)) + ",kd_hrgbeli="
                                    + fsu.fixSqlCharacter(fsu.pengkodean(String.valueOf(ratahrg_beli)))
                                    + " where kd_brg=" + fsu.fixSqlCharacter(tbtransaksi.getValueAt(i, 1).toString()) + ";";

                            if (fsu.idebugging) {
                                System.out.println(" Tambah transaksi beli " + qry);
                            }
                            stin.executeUpdate(qry);
                        } else {
                            qry = "insert into tb_trxbeli1 (nota,kd_brg,hrg_beli,hrg_jual_grosir,hrg_jual_retail,stok,kd_hrgbeli,totalbeli) "
                                    + " values (" + fsu.fixSqlCharacter(notaid.getText()) + ","
                                    + fsu.fixSqlCharacter(tbtransaksi.getValueAt(i, 1).toString()) + ","
                                    + fsu.fixSqlNumber(String.valueOf(hrgBaru)) + ",0,0,"
                                    + fsu.fixSqlNumber(tbtransaksi.getValueAt(i, 3).toString()) + ","
                                    + fsu.fixSqlCharacter(fsu.pengkodean(fsu.fixSqlNumber(String.valueOf(hrgBaru)))) + ","
                                    + fsu.fixSqlNumber(tbtransaksi.getValueAt(i, 5).toString()) + ");";

                            if (fsu.idebugging) {
                                System.out.println(" Tambah transaksi beli " + qry);
                            }
                            stin.executeUpdate(qry);
                            qry = "insert into tb_barang (kd_brg,nama_brg,satuan,hrg_beli,"
                                    + "hrg_jual_grosir,hrg_jual_retail,stok,kd_hrgbeli) values ("
                                    + fsu.fixSqlCharacter(tbtransaksi.getValueAt(i, 1).toString()) + ","
                                    + fsu.fixSqlCharacter(tbtransaksi.getValueAt(i, 2).toString()) + ",'buah',"
                                    + fsu.fixSqlNumber(String.valueOf(hrgBaru)) + ",0,0,"
                                    + fsu.fixSqlNumber(tbtransaksi.getValueAt(i, 3).toString()) + ","
                                    + fsu.fixSqlCharacter(tbtransaksi.getValueAt(i, 4).toString()) + ");";

                            if (fsu.idebugging) {
                                System.out.println(" Tambah transaksi beli " + qry);
                            }
                            stin.executeUpdate(qry);
                        }
                    }
                }
                rs.close();
                sta.close();
                stin.close();
                con.close();
            } catch (Exception ex) {
                if (fsu.idebugging) {
                    System.out.println(" Salah nya " + ex.getMessage());
                }
            }
        } else if (lbsimpantext.getText().equalsIgnoreCase("UBAH TRANSAKSI BELI")) {
            try {
                Class.forName(fsu.klas).newInstance();
                Connection con = DriverManager.getConnection(fsu.klaSS);
                Statement stin = con.createStatement();
                qry = "update tb_trxbeli set kd_sup=" + fsu.fixSqlCharacter(kd_org)
                        + ",tanggal=STR_TO_DATE("
                        + fsu.fixSqlCharacter(tgl.getText()) + ", '%d/%m/%Y') where nota=" + fsu.fixSqlCharacter(notaid.getText());
                stin.executeUpdate(qry);

                stin.close();
                con.close();
            } catch (Exception ex) {
                if (fsu.idebugging) {
                    System.out.println(" Salah nya " + ex.getMessage());
                }
            }
        }
        if (javax.swing.JOptionPane.showConfirmDialog(null, "Cetak Nota ini?", "Perhatian",
                javax.swing.JOptionPane.YES_NO_OPTION,
                javax.swing.JOptionPane.QUESTION_MESSAGE) == javax.swing.JOptionPane.YES_OPTION) {
            btCetakActionPerformed(null);
            lihat();
            btBatalActionPerformed(null);
        } else {
            lihat();
            btBatalActionPerformed(null);
        }
    }
}//GEN-LAST:event_btSimpanActionPerformed

private void notaidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_notaidKeyReleased
    if (evt.getKeyCode() == evt.VK_ENTER) {
        alamat.requestFocus();
    }
}//GEN-LAST:event_notaidKeyReleased

private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
    if (evt.getClickCount() == 2) {
        setGlassPane(glasspanel1);
        panelalpa1.setVisible(false);
        glasspanel1.setVisible(true);
        notaid.requestFocus();
        lbsimpantext.setText("UBAH TRANSAKSI BELI");
        buttonStyle2.setEnabled(false);
        btSimpan.setText("UBAH");
        btSimpan.setMnemonic('U');
        notaid.setText(tabel.getValueAt(tabel.getSelectedRow(), 0).toString());
        notaid.setEditable(false);
        pilihNota.setEnabled(false);
        tgl.setText(tabel.getValueAt(tabel.getSelectedRow(), 1).toString());
        btCetak.setEnabled(true);
        String qry = "select kd_sup,nama_sup,alamat,tlp "
                + "from tb_suplier "
                + "where kd_sup=(select kd_sup from tb_trxbeli where nota="
                + fsu.fixSqlCharacter(tabel.getValueAt(tabel.getSelectedRow(), 0).toString())
                + ")";
        try {
            Class.forName(fsu.klas).newInstance();
            Connection con = DriverManager.getConnection(fsu.klaSS);
            Statement sta = con.createStatement();
            Statement stin = con.createStatement();
            if (fsu.idebugging) {
                System.out.println(" cek tabel klik " + qry);
            }
            ResultSet rs = sta.executeQuery(qry);
            if (rs.next()) {
                kd_org = rs.getString("kd_sup");
                namasuplier.setText(fsu.ceknull(rs.getString("nama_sup")));
                alamat.setText(fsu.ceknull(rs.getString("alamat")));
                tlp.setText(fsu.ceknull(rs.getString("tlp")));
            }
            qry = "delete from tb_trxbeli2 where kd_user=" + pemakai;
            stin.executeUpdate(qry);
            qry = "select a.kd_brg,b.nama_brg,a.hrg_beli,a.hrg_jual_grosir,a.hrg_jual_retail,a.stok,a.kd_hrgbeli,a.totalbeli "
                    + " from tb_trxbeli1 a inner join tb_barang b on a.kd_brg=b.kd_brg where a.nota="
                    + fsu.fixSqlCharacter(tabel.getValueAt(tabel.getSelectedRow(), 0).toString());
            if (fsu.idebugging) {
                System.out.println("cek tabelMouseClicked " + qry);
            }
            rs = sta.executeQuery(qry);
            int i = 0;
            while (rs.next()) {
                i++;
                qry = "insert into tb_trxbeli2 (kd_user,urutan,kd_brg,nama_brg,hrg_beli,stok,kd_hrgbeli,totalbeli) values (" + pemakai + "," + i + ","
                        + fsu.fixSqlCharacter(rs.getString("kd_brg")) + ","
                        + fsu.fixSqlCharacter(rs.getString("nama_brg")) + ","
                        + rs.getString("hrg_beli") + ","
                        + rs.getString("stok") + ","
                        + fsu.fixSqlCharacter(rs.getString("kd_hrgbeli")) + ","
                        + rs.getString("totalbeli") + ")";
                if (fsu.idebugging) {
                    System.out.println("cek tabelMouseClicked " + qry);
                }
                stin.executeUpdate(qry);
            }
            lihattrx();
            stin.close();
            sta.close();
            con.close();
        } catch (Exception ex) {
        }
    }
}//GEN-LAST:event_tabelMouseClicked

private void tlpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tlpKeyReleased
    if (evt.getKeyCode() == evt.VK_ENTER) {
        tgl.requestFocus();
    }
}//GEN-LAST:event_tlpKeyReleased

private void alamatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_alamatKeyReleased
    if (evt.getKeyCode() == evt.VK_TAB) {
        tlp.requestFocus();
    }
}//GEN-LAST:event_alamatKeyReleased

private void pilihNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pilihNotaActionPerformed
    String kode = tgl.getText().substring(0, 2) + tgl.getText().substring(3, 5) + tgl.getText().substring(8, 10);
    try {
        Class.forName(fsu.klas).newInstance();
        Connection con = DriverManager.getConnection(fsu.klaSS);
        Statement sta = con.createStatement();
        String qry = "select max(nota) as ini from tb_trxbeli where nota like '" + kode + "%';";
        if (fsu.idebugging) {
            System.out.println(" qry = " + qry);
        }
        ResultSet rs = sta.executeQuery(qry);
        if (rs.next()) {
            String sementara = "";
            if (rs.getString("ini") == null) {
                kode += "0001";
            } else {
                sementara = rs.getString("ini").substring(6, 10);
                int angka = Integer.valueOf(sementara);
                angka++;
                sementara = String.valueOf(angka);
                while (sementara.length() < 4) {
                    sementara = "0" + sementara;
                }
            }
            kode += sementara;
        } else {
            kode += "0001";
        }
        sta.close();
        con.close();
    } catch (Exception ex) {
        if (fsu.idebugging) {
            System.out.println(" error enter trx_beli lihat " + ex.getMessage());
        }
    }
    notaid.setText(kode);
}//GEN-LAST:event_pilihNotaActionPerformed

private void pilihTglActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pilihTglActionPerformed
    try {
        Date ini = (Date) sdf.parse(tgl.getText());
        dateChooserDialog1.setSelection(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar((1900 + ini.getYear()), ini.getMonth(), ini.getDate()),
                new java.util.GregorianCalendar((1900 + ini.getYear()), ini.getMonth(), ini.getDate()))));
    } catch (Exception ex) {
        if (fsu.idebugging) {
            System.out.println("salah di pilihnota1ActionPerformed " + ex.getMessage());
        }
    }
    dateChooserDialog1.showDialog(null, true);

}//GEN-LAST:event_pilihTglActionPerformed

private void dateChooserDialog1OnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_dateChooserDialog1OnSelectionChange
    if (dateChooserDialog1.getSelectedDate() != null) {
        tgl.setText(sdf.format(dateChooserDialog1.getSelectedDate().getTime()));
    }
}//GEN-LAST:event_dateChooserDialog1OnSelectionChange

private void pilihsuplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pilihsuplierActionPerformed
    glasspanel1.setVisible(false);
    setGlassPane(glasspanel2);
    glasspanel2.setVisible(true);
    lihat1();
}//GEN-LAST:event_pilihsuplierActionPerformed

private void btlanjut1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlanjut1ActionPerformed
    lbhal1.setText(String.valueOf(Integer.valueOf(lbhal1.getText()) + 1));
    lihat1();
}//GEN-LAST:event_btlanjut1ActionPerformed

private void btakhir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btakhir1ActionPerformed
    lbhal1.setText(String.valueOf(akhir1));
    lihat1();
}//GEN-LAST:event_btakhir1ActionPerformed

private void btbalik1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbalik1ActionPerformed
    lbhal1.setText(String.valueOf(Integer.valueOf(lbhal1.getText()) - 1));
    lihat1();
}//GEN-LAST:event_btbalik1ActionPerformed

private void btawal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btawal1ActionPerformed
    lbhal1.setText("1");
    lihat1();
}//GEN-LAST:event_btawal1ActionPerformed

private void limitnih1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limitnih1ActionPerformed
    lbhal1.setText("1");
    lihat1();
}//GEN-LAST:event_limitnih1ActionPerformed

private void lbhal1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lbhal1KeyReleased
    if (evt.getKeyCode() == evt.VK_ENTER) {
        lihat1();
    } else {
        if (lbhal1.getText().length() > 0) {
            try {
                Integer.valueOf(lbhal1.getText());
            } catch (Exception ex) {
                lbhal1.setText("1");
            }
        }
    }
}//GEN-LAST:event_lbhal1KeyReleased

private void txCari1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txCari1KeyReleased
    if (evt.getKeyCode() == evt.VK_ENTER) {
        lihat1();
    }
}//GEN-LAST:event_txCari1KeyReleased

private void tabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel1MouseClicked
    if (evt.getClickCount() == 2) {
        glasspanel2.setVisible(false);
        setGlassPane(glasspanel1);
        glasspanel1.setVisible(true);
        kd_org = tabel1.getValueAt(tabel1.getSelectedRow(), 0).toString();
        namasuplier.setText(tabel1.getValueAt(tabel1.getSelectedRow(), 1).toString());
        alamat.setText(tabel1.getValueAt(tabel1.getSelectedRow(), 2).toString());
        tlp.setText(tabel1.getValueAt(tabel1.getSelectedRow(), 3).toString());
    }
}//GEN-LAST:event_tabel1MouseClicked

private void buttonStyle2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStyle2ActionPerformed
    glasspanel1.setVisible(false);
    setGlassPane(glasspanel3);
    glasspanel3.setVisible(true);
    kd_barang.setText("");
    kd_barang.setEditable(true);
    nama_brg.setText("");
    nama_brg.setEditable(true);
    hrg_beli_brg.setText("0");
    jml_beli_brg.setText("0");
    pilihsuplier1.setEnabled(true);
    totalbeli.setText("0");
    lbsimpantext1.setText("TAMBAH PEMBELIAN BARANG");
    btSimpan1.setText("SIMPAN");
    btSimpan1.setMnemonic('M');

}//GEN-LAST:event_buttonStyle2ActionPerformed

private void btSimpan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSimpan1ActionPerformed
    String qry = "";
    if (lbsimpantext1.getText().equalsIgnoreCase("TAMBAH PEMBELIAN BARANG")) {
        if (kd_barang.getText().length() < 1) {
            kd_barang.requestFocus();
            javax.swing.JOptionPane.showMessageDialog(null, "Isi Kode Barang", "Pesan", 1);
        } else if (nama_brg.getText().length() < 1) {
            nama_brg.requestFocus();
            javax.swing.JOptionPane.showMessageDialog(null, "Isi Nama Barang", "Pesan", 1);
        } else if (Integer.valueOf(jml_beli_brg.getText()) < 1) {
            jml_beli_brg.requestFocus();
            javax.swing.JOptionPane.showMessageDialog(null, "Jumlah Barang yang di beli belum di isi", "Pesan", 1);
        } else {
            try {
                Class.forName(fsu.klas).newInstance();
                Connection con = DriverManager.getConnection(fsu.klaSS);
                Statement stin = con.createStatement();
                Statement sta = con.createStatement();
                int urutan = 0;

                qry = "select kd_brg from tb_trxbeli2 where kd_brg=" + fsu.fixSqlCharacter(kd_barang.getText()) + " and kd_user=" + pemakai;
                ResultSet rs = sta.executeQuery(qry);
                if (rs.next()) {
                    javax.swing.JOptionPane.showMessageDialog(null, "Barang ini telah terdaftar", "Pesan", 1);
                } else {
                    qry = "select max(urutan) as urutan from tb_trxbeli2 where kd_user=" + pemakai;
                    rs = sta.executeQuery(qry);
                    if (rs.next()) {
                        if (rs.getString("urutan") == null) {
                            urutan = 1;
                        } else {
                            urutan = rs.getInt("urutan") + 1;
                        }
                    }

                    qry = "insert into tb_trxbeli2 (urutan,kd_user,kd_brg,nama_brg,hrg_beli,"
                            + "stok,kd_hrgbeli,totalbeli) values (" + urutan + "," + pemakai + "," + fsu.fixSqlCharacter(kd_barang.getText())
                            + "," + fsu.fixSqlCharacter(nama_brg.getText()) + "," + fsu.fixSqlNumber(hrg_beli_brg.getText())
                            + "," + fsu.fixSqlNumber(jml_beli_brg.getText()) + ","
                            + fsu.fixSqlCharacter(fsu.pengkodean(fsu.fixSqlNumber(hrg_beli_brg.getText()))) + ","
                            + fsu.fixSqlNumber(totalbeli.getText()) + ")";
                    if (fsu.idebugging) {
                        System.out.println(" simpan " + qry);
                    }
                    stin.executeUpdate(qry);
                    lihattrx();
                    btBatal1ActionPerformed(null);
                }

                sta.close();
                stin.close();
                con.close();
            } catch (Exception ex) {
                if (fsu.idebugging) {
                    System.out.println(" Salah nya " + ex.getMessage());
                }
            }
        }
    } else if (lbsimpantext1.getText().equalsIgnoreCase("UBAH PEMBELIAN BARANG")) {
        try {
            Class.forName(fsu.klas).newInstance();
            Connection con = DriverManager.getConnection(fsu.klaSS);
            Statement stin = con.createStatement();
            qry = "update tb_trxbeli2 set hrg_beli=" + fsu.fixSqlNumber(hrg_beli_brg.getText()) + ",stok=" + fsu.fixSqlNumber(jml_beli_brg.getText()) + ","
                    + "kd_hrgbeli="
                    + fsu.fixSqlCharacter(fsu.pengkodean(fsu.fixSqlNumber(hrg_beli_brg.getText()))) + ",totalbeli="
                    + fsu.fixSqlNumber(totalbeli.getText()) + " where kd_user=" + pemakai + " and "
                    + " kd_brg=" + fsu.fixSqlCharacter(kd_barang.getText());
            stin.executeUpdate(qry);
            if (fsu.idebugging) {
                System.out.println(" cek ubah pembelian barang " + qry);
            }
            stin.close();
            con.close();
            lihattrx();
            btBatal1ActionPerformed(null);
        } catch (Exception ex) {
            if (fsu.idebugging) {
                System.out.println(" Salah nya " + ex.getMessage());
            }
        }
    }

}//GEN-LAST:event_btSimpan1ActionPerformed

private void btBatal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBatal1ActionPerformed
    glasspanel3.setVisible(false);
    setGlassPane(glasspanel1);
    glasspanel1.setVisible(true);
}//GEN-LAST:event_btBatal1ActionPerformed

private void pilihsuplier1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pilihsuplier1ActionPerformed
    glasspanel3.setVisible(false);
    setGlassPane(glasspanel4);
    glasspanel4.setVisible(true);
    lihat2();
}//GEN-LAST:event_pilihsuplier1ActionPerformed

private void btlanjut2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlanjut2ActionPerformed
    lbhal2.setText(String.valueOf(Integer.valueOf(lbhal.getText()) + 1));
    lihat2();
}//GEN-LAST:event_btlanjut2ActionPerformed

private void btakhir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btakhir2ActionPerformed
    lbhal2.setText(String.valueOf(akhir2));
    lihat2();
}//GEN-LAST:event_btakhir2ActionPerformed

private void btbalik2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbalik2ActionPerformed
    lbhal2.setText(String.valueOf(Integer.valueOf(lbhal.getText()) - 1));
    lihat2();
}//GEN-LAST:event_btbalik2ActionPerformed

private void btawal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btawal2ActionPerformed
    lbhal2.setText("1");
    lihat2();
}//GEN-LAST:event_btawal2ActionPerformed

private void limitnih2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limitnih2ActionPerformed
    lbhal2.setText("1");
    lihat2();
}//GEN-LAST:event_limitnih2ActionPerformed

private void lbhal2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lbhal2KeyReleased
    if (evt.getKeyCode() == evt.VK_ENTER) {
        lihat2();
    } else {
        if (lbhal2.getText().length() > 0) {
            try {
                Integer.valueOf(lbhal2.getText());
            } catch (Exception ex) {
                lbhal2.setText("1");
            }
        }
    }
}//GEN-LAST:event_lbhal2KeyReleased

private void txCari2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txCari2KeyReleased
    if (evt.getKeyCode() == evt.VK_ENTER) {
        lihat2();
    }
}//GEN-LAST:event_txCari2KeyReleased

private void tabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel2MouseClicked
    if (evt.getClickCount() == 2) {
        glasspanel4.setVisible(false);
        setGlassPane(glasspanel3);
        glasspanel3.setVisible(true);
        kd_barang.setText(tabel2.getValueAt(tabel2.getSelectedRow(), 0).toString());
        nama_brg.setText(tabel2.getValueAt(tabel2.getSelectedRow(), 1).toString());
        try {
            Class.forName(fsu.klas).newInstance();
            Connection con = DriverManager.getConnection(fsu.klaSS);
            Statement sta = con.createStatement();
            String qry = "SELECT hrg_beli FROM tb_barang where kd_brg=" + fsu.fixSqlCharacter(kd_barang.getText());
            ResultSet rs = sta.executeQuery(qry);
            if (rs.next()) {
                hrg_beli_brg.setText(fsu.ceknullangka(rs.getString("hrg_beli")));
            }
            rs.close();
            sta.close();
            con.close();
        } catch (Exception ex) {
        }
        jml_beli_brg.setText("0");
        totalbeli.setText("0");
        jml_beli_brg.requestFocus();
    }
}//GEN-LAST:event_tabel2MouseClicked

private void kd_barangKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kd_barangKeyReleased
    if (evt.getKeyCode() == evt.VK_ENTER) {
        nama_brg.requestFocus();
    }
}//GEN-LAST:event_kd_barangKeyReleased

private void kd_barangFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kd_barangFocusLost
    if (lbsimpantext1.getText().equalsIgnoreCase("TAMBAH PEMBELIAN BARANG")) {
        try {
            Class.forName(fsu.klas).newInstance();
            Connection con = DriverManager.getConnection(fsu.klaSS);
            Statement sta = con.createStatement();
            String qry = "SELECT hrg_beli,nama_brg FROM tb_barang where kd_brg=" + fsu.fixSqlCharacter(kd_barang.getText());
            if (fsu.idebugging) {
                System.out.println("kd_barangFocusLost  " + qry);
            }
            ResultSet rs = sta.executeQuery(qry);
            if (rs.next()) {
                if (!nama_brg.getText().equalsIgnoreCase(fsu.ceknull(rs.getString("nama_brg")))) {
                    nama_brg.setText(fsu.ceknull(rs.getString("nama_brg")));
                    hrg_beli_brg.setText(fsu.ceknullangka(rs.getString("hrg_beli")));
                    jml_beli_brg.setText("0");
                    totalbeli.setText("0");
                }
            } else {
                nama_brg.setText("");
            }
            rs.close();
            sta.close();
            con.close();
        } catch (Exception ex) {
            nama_brg.setText("");
        }
    }
}//GEN-LAST:event_kd_barangFocusLost

private void nama_brgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nama_brgKeyReleased
    if (evt.getKeyCode() == evt.VK_ENTER) {
        hrg_beli_brg.requestFocus();
    }
}//GEN-LAST:event_nama_brgKeyReleased

private void jml_beli_brgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jml_beli_brgKeyReleased
    if (evt.getKeyCode() == evt.VK_ENTER) {
        kd_barang.requestFocus();
    } else {
        String hasil = "0";
        int jml = 0;
        try {
            jml = Integer.valueOf(fsu.fixSqlNumber(jml_beli_brg.getText())) * Integer.valueOf(fsu.fixSqlNumber(hrg_beli_brg.getText()));
            hasil = fsu.ceknullangka(String.valueOf(jml));
        } catch (Exception ex) {
            if (fsu.idebugging) {
                System.out.println("salah " + ex.getMessage());
            }
        }
        totalbeli.setText(hasil);
    }
}//GEN-LAST:event_jml_beli_brgKeyReleased

private void tbtransaksiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbtransaksiKeyReleased
    if (lbsimpantext.getText().equalsIgnoreCase("TAMBAH TRANSAKSI BELI") && evt.getKeyCode() == evt.VK_DELETE) {
        if (javax.swing.JOptionPane.showConfirmDialog(null, "Hapus data barang ini?", "Perhatian",
                javax.swing.JOptionPane.YES_NO_OPTION,
                javax.swing.JOptionPane.QUESTION_MESSAGE) == javax.swing.JOptionPane.YES_OPTION) {
            try {
                Class.forName(fsu.klas).newInstance();
                Connection con = DriverManager.getConnection(fsu.klaSS);
                Statement sta = con.createStatement();
                String qry = "";
                int baris[] = tbtransaksi.getSelectedRows();
                for (int x = 0; x < baris.length; x++) {
                    if (x > 0) {
                        qry += ",";
                    }
                    qry += fsu.fixSqlCharacter(tbtransaksi.getValueAt(baris[x], 1).toString());
                }
                qry = "delete from tb_trxbeli2 where kd_brg in (" + qry + ") and kd_user=" + pemakai + ";";
                if (fsu.idebugging) {
                    System.out.println("tbtransaksiKeyReleased  " + qry);
                }
                sta.executeUpdate(qry);
                lihattrx();
                sta.close();
                con.close();
            } catch (Exception ex) {
            }
        }
    }
}//GEN-LAST:event_tbtransaksiKeyReleased

private void tbtransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbtransaksiMouseClicked

    if (lbsimpantext.getText().equalsIgnoreCase("TAMBAH TRANSAKSI BELI") && evt.getClickCount() == 2) {
        kd_barang.setText(tbtransaksi.getValueAt(tbtransaksi.getSelectedRow(), 1).toString());
        kd_barang.setEditable(false);
        nama_brg.setText(tbtransaksi.getValueAt(tbtransaksi.getSelectedRow(), 2).toString());
        nama_brg.setEditable(false);
        pilihsuplier1.setEnabled(false);
        try {
            Class.forName(fsu.klas).newInstance();
            Connection con = DriverManager.getConnection(fsu.klaSS);
            Statement sta = con.createStatement();
            String qry = "SELECT hrg_beli FROM tb_trxbeli2 where kd_brg=" + fsu.fixSqlCharacter(kd_barang.getText()) + " and kd_user=" + pemakai;
            if (fsu.idebugging) {
                System.out.println("kd_barangFocusLost  " + qry);
            }
            ResultSet rs = sta.executeQuery(qry);
            if (rs.next()) {
                hrg_beli_brg.setText(fsu.ceknullangka(rs.getString("hrg_beli")));
            }
            rs.close();
            sta.close();
            con.close();
        } catch (Exception ex) {
        }
        jml_beli_brg.setText(tbtransaksi.getValueAt(tbtransaksi.getSelectedRow(), 3).toString());
        String hasil = "0";
        int jml = 0;
        try {
            jml = Integer.valueOf(jml_beli_brg.getText()) * Integer.valueOf(hrg_beli_brg.getText());
            hasil = String.valueOf(jml);
        } catch (Exception ex) {
        }
        totalbeli.setText(tbtransaksi.getValueAt(tbtransaksi.getSelectedRow(), 5).toString());
        lbsimpantext1.setText("UBAH PEMBELIAN BARANG");
        btSimpan1.setText("UBAH");
        btSimpan1.setMnemonic('B');
        glasspanel1.setVisible(false);
        setGlassPane(glasspanel3);
        glasspanel3.setVisible(true);
    }
}//GEN-LAST:event_tbtransaksiMouseClicked

private void hrg_beli_brgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hrg_beli_brgKeyReleased
    if (evt.getKeyCode() == evt.VK_ENTER) {
        jml_beli_brg.requestFocus();
    } else {
        String hasil = "0";
        int jml = 0;
        try {
            jml = Integer.valueOf(fsu.fixSqlNumber(jml_beli_brg.getText())) * Integer.valueOf(fsu.fixSqlNumber(hrg_beli_brg.getText()));
            hasil = fsu.ceknullangka(String.valueOf(jml));
        } catch (Exception ex) {
        }
        totalbeli.setText(hasil);
    }
}//GEN-LAST:event_hrg_beli_brgKeyReleased

private void btCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCetakActionPerformed

    try {
        Class.forName(fsu.klas).newInstance();
        Connection con = DriverManager.getConnection(fsu.klaSS);
        String fileReport = fsu.getPath() + "rp_belix.jasper";

        if (fsu.idebugging) {
            fileReport = "rp_belix.jasper";
        }
        if (fsu.idebugging) {
            System.out.println(" t4 file jasper = " + fileReport);
        }
        java.util.Map parameter = new java.util.HashMap();
        parameter.put("tgl", tgl.getText());
        parameter.put("notaid", notaid.getText());
        parameter.put("nama_suplier", namasuplier.getText());
        parameter.put("alamat_suplier", alamat.getText());
        parameter.put("tlp", tlp.getText());
        parameter.put("totalharga", lbTotal.getText());
        net.sf.jasperreports.engine.JasperPrint jasperPrint = net.sf.jasperreports.engine.JasperFillManager.fillReport(fileReport, parameter, con);
        //buat print
        if (fsu.printdeh) {
            net.sf.jasperreports.engine.JasperPrintManager.printReport(jasperPrint, false);
        } else {
            net.sf.jasperreports.view.JasperViewer jasperViewer = new net.sf.jasperreports.view.JasperViewer(jasperPrint, false);
            jasperViewer.setDefaultCloseOperation(javax.swing.JFrame.HIDE_ON_CLOSE);
            jasperViewer.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
            jasperViewer.setTitle("Laporan");
            jasperViewer.setVisible(true);
        }
        con.close();
    } catch (Exception ex) {
        if (fsu.idebugging) {
            System.out.println(" salah di " + ex.getMessage());
        }
    }


}//GEN-LAST:event_btCetakActionPerformed

private void tabelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelKeyReleased
    if (evt.getKeyCode() == evt.VK_DELETE) {
        if (javax.swing.JOptionPane.showConfirmDialog(null, "Hapus Data ini?", "Perhatian",
                javax.swing.JOptionPane.YES_NO_OPTION,
                javax.swing.JOptionPane.QUESTION_MESSAGE) == javax.swing.JOptionPane.YES_OPTION) {
            try {
                Class.forName(fsu.klas).newInstance();
                Connection con = DriverManager.getConnection(fsu.klaSS);
                Statement sta = con.createStatement();
                String qry = "", qryi = "";
                int baris[] = tabel.getSelectedRows();
                for (int x = 0; x < baris.length; x++) {
                    if (x > 0) {
                        qry += ",";
                    }
                    qry += fsu.fixSqlCharacter(tabel.getValueAt(baris[x], 0).toString());
                }
                qryi = "delete from tb_trxbeli1 where nota in (" + qry + ");";
                if (fsu.idebugging) {
                    System.out.println("tbtransaksiKeyReleased  " + qryi);
                }
                sta.executeUpdate(qryi);
                qryi = "delete from tb_trxbeli where nota in (" + qry + ");";
                if (fsu.idebugging) {
                    System.out.println("tbtransaksiKeyReleased  " + qryi);
                }
                sta.executeUpdate(qryi);
                lihattrx();
                sta.close();
                con.close();
            } catch (Exception ex) {
            }
            lihat();
        }
    }
}//GEN-LAST:event_tabelKeyReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private aplikasitoko.textArea alamat;
    private aplikasitoko.buttonStyle btBatal;
    private aplikasitoko.buttonStyle btBatal1;
    private aplikasitoko.buttonStyle btCetak;
    private aplikasitoko.buttonStyle btSimpan;
    private aplikasitoko.buttonStyle btSimpan1;
    private aplikasitoko.buttonStyle btakhir;
    private aplikasitoko.buttonStyle btakhir1;
    private aplikasitoko.buttonStyle btakhir2;
    private aplikasitoko.buttonStyle btawal;
    private aplikasitoko.buttonStyle btawal1;
    private aplikasitoko.buttonStyle btawal2;
    private aplikasitoko.buttonStyle btbalik;
    private aplikasitoko.buttonStyle btbalik1;
    private aplikasitoko.buttonStyle btbalik2;
    private aplikasitoko.btkeluar btkeluar1;
    private aplikasitoko.buttonStyle btlanjut;
    private aplikasitoko.buttonStyle btlanjut1;
    private aplikasitoko.buttonStyle btlanjut2;
    private aplikasitoko.buttonStyle buttonStyle1;
    private aplikasitoko.buttonStyle buttonStyle2;
    private datechooser.beans.DateChooserDialog dateChooserDialog1;
    private aplikasitoko.numberfield hrg_beli_brg;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private aplikasitoko.numberfield jml_beli_brg;
    private aplikasitoko.textFieldStyle kd_barang;
    private aplikasitoko.aplikasi.labelklip labelklip2;
    private aplikasitoko.aplikasi.labelklip labelklip3;
    private aplikasitoko.aplikasi.labelklip labelklip4;
    private aplikasitoko.aplikasi.labelklip labelklip5;
    private aplikasitoko.aplikasi.labelklip labelklip6;
    private aplikasitoko.aplikasi.labelklip labelklip7;
    private aplikasitoko.textFieldStyle lbTotal;
    private aplikasitoko.aplikasi.labelklip lbakhirhalaman;
    private aplikasitoko.aplikasi.labelklip lbakhirhalaman1;
    private aplikasitoko.aplikasi.labelklip lbakhirhalaman2;
    private aplikasitoko.textFieldStyle lbhal;
    private aplikasitoko.textFieldStyle lbhal1;
    private aplikasitoko.textFieldStyle lbhal2;
    private aplikasitoko.aplikasi.labelklip lbsimpantext;
    private aplikasitoko.aplikasi.labelklip lbsimpantext1;
    private javax.swing.JComboBox limitnih;
    private javax.swing.JComboBox limitnih1;
    private javax.swing.JComboBox limitnih2;
    private aplikasitoko.textFieldStyle nama_brg;
    private aplikasitoko.textFieldStyle namasuplier;
    private aplikasitoko.textFieldStyle notaid;
    private aplikasitoko.panelalpa panelalpa1;
    private aplikasitoko.panelalpa panelalpa2;
    private aplikasitoko.panelalpa panelalpa3;
    private aplikasitoko.panelimagetbbarang panelimagetbbarang1;
    private aplikasitoko.buttonStyle pilihNota;
    private aplikasitoko.buttonStyle pilihTgl;
    private aplikasitoko.buttonStyle pilihsuplier;
    private aplikasitoko.buttonStyle pilihsuplier1;
    private aplikasitoko.aplikasi.panelalpatebel pnSimpan;
    private aplikasitoko.aplikasi.panelalpatebel pnSimpanBarang;
    private javax.swing.JTable tabel;
    private javax.swing.JTable tabel1;
    private javax.swing.JTable tabel2;
    private javax.swing.JTable tbtransaksi;
    private aplikasitoko.textMasking tgl;
    private aplikasitoko.textFieldStyle tlp;
    private aplikasitoko.numberfield totalbeli;
    private aplikasitoko.textFieldStyle txCari;
    private aplikasitoko.textFieldStyle txCari1;
    private aplikasitoko.textFieldStyle txCari2;
    // End of variables declaration//GEN-END:variables
    javax.swing.table.TableModel tmtabel, tmtabel1, tmtabel2, tmtransaksi;
    String kd_org = "";
    public String pemakai = "";
    SimpleDateFormat sdf =
            new SimpleDateFormat("dd/MM/yyyy");
    MaskFormatter maskingdate;
    java.util.Vector dataini = new java.util.Vector(), dataini1 = new java.util.Vector(), dataini2 = new java.util.Vector(),
            dttransaksi = new java.util.Vector();
    javax.swing.table.TableColumn tc = new javax.swing.table.TableColumn();
    aplikasitoko.fungsi fsu = new aplikasitoko.fungsi();
    headertabel headerrender, headerrender1, headerrender2, headertrx;
    private glasspanel glasspanel1, glasspanel2, glasspanel3, glasspanel4;
    int akhir = 0;
    boolean ascendi = false;
    int kolompilih = 1;

    private void lihat() {
        String qry = "", orderbi = " order by a.tanggal", kondisi = "";
        int posisi = (Integer.valueOf(lbhal.getText()) - 1);
        if (fsu.idebugging) {
            System.out.println(" lihat data ini tb_suplier " + posisi);
        }
        if (posisi == 0) {
            btbalik.setEnabled(false);
            btawal.setEnabled(false);
        } else {
            btbalik.setEnabled(true);
            btawal.setEnabled(true);
        }

        switch (kolompilih) {
            case 0:
                orderbi = " order by nota ";
                break;
            case 1:
                orderbi = " order by tanggalv ";
                break;
            case 2:
                orderbi = " order by kd_sup ";
                break;
            case 3:
                orderbi = " order by nama_sup ";
                break;
        }
        if (ascendi) {
            orderbi += " asc ";
        } else {
            orderbi += " desc ";
        }


        if (txCari.getText().length() > 0) {
            kondisi = " where nota like '%" + StringEscapeUtils.escapeSql(txCari.getText())
                    + "%' or tanggal like '%" + StringEscapeUtils.escapeSql(txCari.getText())
                    + "%' or nama_sup like '%" + StringEscapeUtils.escapeSql(txCari.getText())
                    + "%' or kd_sup like '%" + StringEscapeUtils.escapeSql(txCari.getText())
                    + "%'";
        }

        int i = 0, limit = Integer.valueOf(limitnih.getSelectedItem().toString()),
                posisi2 = 0;
        String opset = "";
        try {
            Class.forName(fsu.klas).newInstance();
            Connection con = DriverManager.getConnection(fsu.klaSS);
            Statement sta = con.createStatement();
            qry = "select count(*) as jumlah from (select nota,kd_sup,tanggal,nama_sup,tanggalv "
                    + " from (("
                    + " SELECT a.nota,a.kd_sup,date_format(a.tanggal,'%d/%m/%Y') as tanggal,a.tanggal as tanggalv,"
                    + " b.nama_sup,a.tanggal as tanggals from "
                    + " tb_trxbeli a join tb_suplier b on a.kd_sup=b.kd_sup ) as aha) "
                    + kondisi + ") as ihi ";
            if (fsu.idebugging) {
                System.out.println(" cek lihat " + qry);
            }
            ResultSet rs = sta.executeQuery(qry);
            if (rs.next()) {
                if (rs.getInt("jumlah") > 0) {
                    akhir = rs.getInt("jumlah") / limit;
                    if ((rs.getInt("jumlah") % limit) > 0) {
                        akhir++;
                    }
                    if ((akhir - 1) <= posisi) {
                        btlanjut.setEnabled(false);
                        btakhir.setEnabled(false);
                        lbhal.setText(String.valueOf(akhir));
                        posisi = (Integer.valueOf(lbhal.getText()) - 1);
                    } else {
                        if (posisi < 0) {
                            posisi = 0;
                            lbhal.setText("1");
                            btbalik.setEnabled(false);
                            btawal.setEnabled(false);
                        }
                        btlanjut.setEnabled(true);
                        btakhir.setEnabled(true);
                    }
                } else {
                    posisi = 0;
                    btlanjut.setEnabled(false);
                    btakhir.setEnabled(false);
                    btbalik.setEnabled(false);
                    btawal.setEnabled(false);
                    lbhal.setText("0");
                }
            }
            posisi2 = posisi * limit;
            opset = " limit " + posisi2 + " , " + String.valueOf(limit);
            qry = "select nota,kd_sup,tanggal,nama_sup,tanggalv "
                    + "from ("
                    + "SELECT a.nota,a.kd_sup,date_format(a.tanggal,'%d/%m/%Y') as tanggal,a.tanggal as tanggalv,"
                    + "b.nama_sup,a.tanggal as tanggals from "
                    + "tb_trxbeli a join tb_suplier b on a.kd_sup=b.kd_sup) "
                    + "as aha "
                    + kondisi + orderbi + opset;
            if (fsu.idebugging) {
                System.out.println(" lihat data ini tb_suplier " + qry);
            }
            rs = sta.executeQuery(qry);
            java.util.Vector baris = null;
            dataini = new java.util.Vector();
            while (rs.next()) {
                baris = new java.util.Vector();
                baris.addElement(rs.getString("nota"));
                baris.addElement(fsu.ceknull(rs.getString("tanggal")));
                baris.addElement(fsu.ceknull(rs.getString("kd_sup")));
                baris.addElement(fsu.ceknull(rs.getString("nama_sup")));
                dataini.addElement(baris);
            }
            tabel.tableChanged(new javax.swing.event.TableModelEvent(tmtabel));
            lbakhirhalaman.setText(" dari " + akhir + " Halaman");
            sta.close();
            con.close();
        } catch (Exception ex) {
            if (fsu.idebugging) {
                System.out.println(" error enter trx_beli lihat " + ex.getMessage());
            }
        }

    }
    int kolompilih1 = 0;
    boolean ascendi1 = true;
    int akhir1 = 0;

    private void lihat1() {
        String qry = "", orderbi = "", kondisi = "";
        int posisi = (Integer.valueOf(lbhal1.getText()) - 1);
        if (fsu.idebugging) {
            System.out.println(" lihat data ini tb_suplier " + posisi);
        }
        if (posisi == 0) {
            btbalik1.setEnabled(false);
            btawal1.setEnabled(false);
        } else {
            btbalik1.setEnabled(true);
            btawal1.setEnabled(true);
        }

        switch (kolompilih1) {
            case 0:
                orderbi = " order by kd_sup ";
                break;
            case 1:
                orderbi = " order by nama_sup ";
                break;
            case 2:
                orderbi = " order by alamat ";
                break;
            case 3:
                orderbi = " order by tlp ";
                break;
        }
        if (ascendi1) {
            orderbi += " asc ";
        } else {
            orderbi += " desc ";
        }


        if (txCari1.getText().length() > 0) {
            kondisi = " where kd_sup like '%" + StringEscapeUtils.escapeSql(txCari1.getText())
                    + "%' nama_sup like '%" + StringEscapeUtils.escapeSql(txCari1.getText())
                    + "%' alamat like '%" + StringEscapeUtils.escapeSql(txCari1.getText())
                    + "%' tlp like '%" + StringEscapeUtils.escapeSql(txCari1.getText())
                    + "%'";
        }

        int i = 0, limit = Integer.valueOf(limitnih1.getSelectedItem().toString()),
                posisi2 = 0;
        String opset = "";
        try {
            Class.forName(fsu.klas).newInstance();
            Connection con = DriverManager.getConnection(fsu.klaSS);
            Statement sta = con.createStatement();
            qry = "select count(*) as jumlah from tb_suplier " + kondisi;
            ResultSet rs = sta.executeQuery(qry);
            if (rs.next()) {
                if (rs.getInt("jumlah") > 0) {
                    akhir1 = rs.getInt("jumlah") / limit;
                    if ((rs.getInt("jumlah") % limit) > 0) {
                        akhir1++;
                    }
                    if ((akhir1 - 1) <= posisi) {
                        btlanjut1.setEnabled(false);
                        btakhir1.setEnabled(false);
                        lbhal1.setText(String.valueOf(akhir1));
                        posisi = (Integer.valueOf(lbhal1.getText()) - 1);
                    } else {
                        if (posisi < 0) {
                            posisi = 0;
                            lbhal1.setText("1");
                            btbalik1.setEnabled(false);
                            btawal1.setEnabled(false);
                        }
                        btlanjut1.setEnabled(true);
                        btakhir1.setEnabled(true);
                    }
                } else {
                    posisi = 0;
                    btlanjut1.setEnabled(false);
                    btakhir1.setEnabled(false);
                    btbalik1.setEnabled(false);
                    btawal1.setEnabled(false);
                    lbhal1.setText("0");
                }
            }
            posisi2 = posisi * limit;
            opset = " limit " + posisi2 + " , " + String.valueOf(limit);
            qry = "SELECT kd_sup,nama_sup,alamat,tlp "
                    + "FROM tb_suplier "
                    + kondisi + orderbi + opset;
            if (fsu.idebugging) {
                System.out.println(" lihat data ini tb_suplier " + qry);
            }
            rs = sta.executeQuery(qry);
            java.util.Vector baris = null;
            dataini1 = new java.util.Vector();
            while (rs.next()) {
                baris = new java.util.Vector();
                baris.addElement(rs.getString("kd_sup"));
                baris.addElement(fsu.ceknull(rs.getString("nama_sup")));
                baris.addElement(fsu.ceknull(rs.getString("alamat")));
                baris.addElement(fsu.ceknull(rs.getString("tlp")));
                dataini1.addElement(baris);
            }
            tabel1.tableChanged(new javax.swing.event.TableModelEvent(tmtabel1));
            lbakhirhalaman1.setText(" dari " + akhir1 + " Halaman");
            sta.close();
            con.close();
        } catch (Exception ex) {
            if (fsu.idebugging) {
                System.out.println(" error enter tb_suplier lihat " + ex.getMessage());
            }
        }

    }
    int kolompilih2 = 0;
    boolean ascendi2 = true;
    int akhir2 = 0;

    private void lihat2() {
        String qry = "", orderbi = "", kondisi = "";
        int posisi = (Integer.valueOf(lbhal2.getText()) - 1);
        if (fsu.idebugging) {
            System.out.println(" lihat data ini tbbarang " + posisi);
        }
        if (posisi == 0) {
            btbalik2.setEnabled(false);
            btawal2.setEnabled(false);
        } else {
            btbalik2.setEnabled(true);
            btawal2.setEnabled(true);
        }

        switch (kolompilih2) {
            case 0:
                orderbi = " order by kd_brg ";
                break;
            case 1:
                orderbi = " order by nama_brg ";
                break;
            case 2:
                orderbi = " order by hrg_beli ";
                break;
            case 3:
                orderbi = " order by hrg_jual_grosir ";
                break;
            case 4:
                orderbi = " order by hrg_jual_retail ";
                break;
            case 5:
                orderbi = " order by stok ";
                break;
        }
        if (ascendi2) {
            orderbi += " asc ";
        } else {
            orderbi += " desc ";
        }
        kondisi = " where kd_brg not in (select kd_brg from tb_trxbeli2 where kd_user=" + pemakai + " )";


        if (txCari2.getText().length() > 0) {
            kondisi += " and (kd_brg like '%" + StringEscapeUtils.escapeSql(txCari2.getText())
                    + "%' OR nama_brg like '%" + StringEscapeUtils.escapeSql(txCari2.getText())
                    + "%' OR satuan like '%" + StringEscapeUtils.escapeSql(txCari2.getText())
                    + "%') ";
        }

        int i = 0, limit = Integer.valueOf(limitnih2.getSelectedItem().toString()),
                posisi2 = 0;
        String opset = "";
        try {
            Class.forName(fsu.klas).newInstance();
            Connection con = DriverManager.getConnection(fsu.klaSS);
            Statement sta = con.createStatement();
            qry = "select count(*) as jumlah from tb_barang " + kondisi;
            ResultSet rs = sta.executeQuery(qry);
            if (rs.next()) {
                if (rs.getInt("jumlah") > 0) {
                    akhir2 = rs.getInt("jumlah") / limit;
                    if ((rs.getInt("jumlah") % limit) > 0) {
                        akhir2++;
                    }
                    if ((akhir2 - 1) <= posisi) {
                        btlanjut2.setEnabled(false);
                        btakhir2.setEnabled(false);
                        lbhal2.setText(String.valueOf(akhir2));
                        posisi = (Integer.valueOf(lbhal2.getText()) - 1);
                    } else {
                        if (posisi < 0) {
                            posisi = 0;
                            lbhal2.setText("1");
                            btbalik2.setEnabled(false);
                            btawal2.setEnabled(false);
                        }
                        btlanjut2.setEnabled(true);
                        btakhir2.setEnabled(true);
                    }
                } else {
                    posisi = 0;
                    btlanjut2.setEnabled(false);
                    btakhir2.setEnabled(false);
                    btbalik2.setEnabled(false);
                    btawal2.setEnabled(false);
                    lbhal2.setText("0");
                }
            }
            posisi2 = posisi * limit;
            opset = " limit " + posisi2 + " , " + String.valueOf(limit);
            qry = "SELECT kd_brg,nama_brg,kd_hrgbeli,"
                    + "hrg_beli,hrg_jual_grosir,hrg_jual_retail,stok,"
                    + "satuan,format(hrg_jual_grosir,0) as hrg_jual_grosirnya,"
                    + "format(hrg_jual_retail,0) as hrg_jual_retailnya,"
                    + "format(stok,0) as stoknya "
                    + "FROM tb_barang "
                    + kondisi + orderbi + opset;
            if (fsu.idebugging) {
                System.out.println(" lihat data ini tbbarang " + qry);
            }
            rs = sta.executeQuery(qry);
            java.util.Vector baris = null;
            dataini2 = new java.util.Vector();
            while (rs.next()) {

                baris = new java.util.Vector();
                baris.addElement(fsu.ceknull(rs.getString("kd_brg")));
                baris.addElement(fsu.ceknull(rs.getString("nama_brg")));
                baris.addElement(fsu.pengkodean(fsu.ceknull(rs.getString("hrg_beli"))));
                baris.addElement(fsu.ceknullangka(rs.getString("hrg_jual_grosir")));
                baris.addElement(fsu.ceknullangka(rs.getString("hrg_jual_retail")));
                baris.addElement(fsu.ceknullangka(rs.getString("stok")) + " " + rs.getString("satuan"));
                dataini2.addElement(baris);
            }
            tabel2.tableChanged(new javax.swing.event.TableModelEvent(tmtabel2));
            lbakhirhalaman2.setText(" dari " + akhir + " Halaman");
            sta.close();
            con.close();
        } catch (Exception ex) {
            if (fsu.idebugging) {
                System.out.println(" error enter tb_barang lihat " + ex.getMessage());
            }
        }

    }
    int kolompilihtx = 0;
    boolean ascenditx = true;

    void lihattrx() {
        String orderbi = " order by urutan";

        switch (kolompilihtx) {
            case 0:
                orderbi = " order by urutan ";
                break;
            case 1:
                orderbi = " order by kd_brg ";
            case 2:
                orderbi = " order by nama_brg ";
                break;
            case 3:
                orderbi = " order by hrg_beli ";
                break;
            case 4:
                orderbi = " order by stok ";
                break;
            case 5:
                orderbi = " order by totalbeli ";
                break;
        }
        if (ascenditx) {
            orderbi += " ASC";
        } else {
            orderbi += " DESC";
        }
        String qry = "select urutan,kd_user,nama_brg,kd_brg,hrg_beli,stok,totalbeli from tb_trxbeli2 a where kd_user = " + pemakai + orderbi;
        if (fsu.idebugging) {
            System.out.println(" lihattrx 1 " + qry);
        }
        try {
            Class.forName(fsu.klas).newInstance();
            Connection con = DriverManager.getConnection(fsu.klaSS);
            Statement sta = con.createStatement();
            ResultSet rs = sta.executeQuery(qry);
            java.util.Vector baris = null;
            dttransaksi = new java.util.Vector();
            int i = 0, total = 0;
            while (rs.next()) {
                i++;
                baris = new java.util.Vector();
                baris.addElement(String.valueOf(i));
                baris.addElement(fsu.ceknull(rs.getString("kd_brg")));
                baris.addElement(fsu.ceknull(rs.getString("nama_brg")));
                baris.addElement(fsu.ceknullangka(rs.getString("stok")));
                baris.addElement(fsu.pengkodean(fsu.ceknull(rs.getString("hrg_beli"))));
                baris.addElement(fsu.ceknullangka(rs.getString("totalbeli")));
                total += rs.getInt("totalbeli");
                dttransaksi.addElement(baris);
            }
            tbtransaksi.tableChanged(new javax.swing.event.TableModelEvent(tmtransaksi));
            lbTotal.setText(fsu.ceknullangka(String.valueOf(total)));
            sta.close();
            con.close();
        } catch (Exception ex) {
            if (fsu.idebugging) {
                System.out.println(" error enter tb_barang lihat " + ex.getMessage());
            }
        }
    }

    class MultiLineHeaderRenderer extends JPanel implements TableCellRenderer {

        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
            JLabel label;
            removeAll();
            String[] header = ((String) value).split("\n");
            setLayout(new GridLayout(header.length, 1));
            for (String s : header) {
                label = new JLabel(s, JLabel.CENTER);
                label.setFont(new java.awt.Font("Arial", 1, 25));
                add(label);
            }
            LookAndFeel.installBorder(this, "TableHeader.cellBorder");
            return this;
        }
    }
}
